parameters:
    checkExplicitMixedMissingReturn: true
    checkPhpDocMissingReturn: true
    scanDirectories:
        - %rootDir%/../../../dev/tests/static/framework/tests/unit/testsuite/Magento
        - %rootDir%/../../../dev/tests/integration/framework/tests/unit/testsuite/Magento
        - %rootDir%/../../../dev/tests/api-functional/_files/Magento
    bootstrapFiles:
        - %rootDir%/../../../dev/tests/static/framework/autoload.php
        - %rootDir%/../../../dev/tests/integration/framework/autoload.php
        - %rootDir%/../../../dev/tests/api-functional/framework/autoload.php
        - %rootDir%/../../../dev/tests/setup-integration/framework/autoload.php
        - %rootDir%/../../../dev/tests/static/framework/Magento/PhpStan/autoload.php
    ignoreErrors:
        # Optional module deps
        -
            message: '#^Caught class Elastic\\.*not found.#'
            paths:
                - Model/Client/Elasticsearch8/*
        -
            message: '#^.*getElasticsearchClient\(\) has invalid return type Elastic\\Elasticsearch\\Client.#'
            paths:
                - Model/Client/Elasticsearch8/*
        -
            message: '#^Call to static method fromConfig\(\).*#'
            paths:
                - Model/Client/Elasticsearch8/*
services:
    -
        class: Magento\PhpStan\Reflection\Php\DataObjectClassReflectionExtension
        tags: {phpstan.broker.methodsClassReflectionExtension: {priority: 100}}

    errorFormatter.filtered:
        class: Magento\PhpStan\Formatters\FilteredErrorFormatter
        arguments:
            tableErrorFormatter: @errorFormatter.table
